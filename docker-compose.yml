---
services:

  connect:
    build: .
    container_name: connect
    depends_on:
      emulators:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: external_kafka_connect_docker
      CONNECT_CONFIG_STORAGE_TOPIC: vault.infra.external.kafka_connect.default.config
      CONNECT_OFFSET_STORAGE_TOPIC: vault.infra.external.kafka_connect.default.offset
      CONNECT_STATUS_STORAGE_TOPIC: vault.infra.external.kafka_connect.default.status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_IO_CBDQ_LOGLEVEL: DEBUG
      PROMETHEUS_PORT: 9400
    image: kc-connectors:latest
    ports:
      - 8083:8083
      - 9400:9400

  emulators:
    build: "./tests/resources/is_sbus_emulator_alive"
    command:
      - "-c"
      - "Endpoint=sb://sbemulatorns;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SAS_KEY_VALUE;UseDevelopmentEmulator=true;"
      - "-f"
      - "/usr/local/etc/Config.json"
    container_name: emulators
    depends_on:
      sbemulatorns:
        condition: service_started
    volumes:
      - "./tests/resources/sbus-landing-config.json:/usr/local/etc/Config.json"

  kafka:
    container_name: kafka
    environment:
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_LISTENERS: 'INTERNAL://kafka:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_MAX_REQUEST_SIZE: 4194352
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      LOG_LEVEL: WARN
    healthcheck:
      test: kafka-topics --list --bootstrap-server kafka:9092
      interval: 1s
      retries: 30
    image: confluentinc/cp-kafka:7.6.2
    ports:
      - 9092:9092
    volumes:
      - "./tests/resources/scripts/data-gen.py:/usr/local/bin/data-gen.py"

  kccinit:
    build: .
    container_name: kccinit
    depends_on:
      - connect
    entrypoint:
      - "/usr/local/bin/kccinit.py"
      - "-s"
    environment:
      CONNECTOR_AzureServiceBusSink_AZURE_SERVICEBUS_CONNECTION_STRING: "${CONNECTION_STRING:-Endpoint=sb://sbemulatorns;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SAS_KEY_VALUE;UseDevelopmentEmulator=true;}"
      CONNECTOR_AzureServiceBusSink_CONNECTOR_CLASS: io.cbdq.AzureServiceBusSinkConnector
      CONNECTOR_AzureServiceBusSink_CONSUMER_OVERRIDE_AUTO_OFFSET_RESET: earliest
      CONNECTOR_AzureServiceBusSink_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECTOR_AzureServiceBusSink_LARGE_MESSAGE_THRESHOLD_BYTES: 100000
      CONNECTOR_AzureServiceBusSink_RETRY_MAX_ATTEMPTS: "5"
      CONNECTOR_AzureServiceBusSink_RETRY_WAIT_TIME_MS: "1000"
      CONNECTOR_AzureServiceBusSink_SET_KAFKA_PARTITION_AS_SESSION_ID: "true"
      CONNECTOR_AzureServiceBusSink_TASKS_MAX: "2"
      CONNECTOR_AzureServiceBusSink_TOPIC_RENAME_FORMAT: "replicated-$${topic}"
      CONNECTOR_AzureServiceBusSink_TOPICS: "vault.api.v1.accounts.account.created,vault.api.v1.audit_logs.audit_log.created"
      CONNECTOR_AzureServiceBusSink_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      KAFKA_CONNECT_ENDPOINT: "http://connect:8083"
      LOG_LEVEL: DEBUG
    healthcheck:
      test: curl --fail --silent localhost:8000
      interval: 5s
      retries: 12
    ports:
      - "8000:8000"

  sbemulatorns:
    container_name: "sbemulatorns"
    depends_on:
      sqledge:
        condition: service_healthy
    environment:
      SQL_SERVER: sqledge
      MSSQL_SA_PASSWORD: "Secret123"
      ACCEPT_EULA: "Y"
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    ports:
      - "5672:5672"
      - "8080:8080"
    volumes:
      - "./tests/resources/sbus-landing-config.json:/ServiceBus_Emulator/ConfigFiles/Config.json"

  sqledge:
    container_name: "sqledge"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Secret123"
    healthcheck:
      test: timeout 1 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/1433'
    image: "mcr.microsoft.com/azure-sql-edge:latest"
